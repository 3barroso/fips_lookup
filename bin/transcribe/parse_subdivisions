#!/usr/bin/env ruby
# frozen_string_literal: true

require "pathname"
require "fileutils"
require "csv"
require "fips_lookup"

puts "HELLO FROM GEM Executible"

# /Users/erik/workspace/national_cousub2020.txt => current file path
# /Users/erik/workspace/temp.txt
# source location: https://www2.census.gov/geo/docs/reference/codes2020/national_cousub2020.txt

# Headers: STATE|STATEFP|COUNTYFP|COUNTYNAME|COUSUBFP|COUSUBNS|COUSUBNAME|CLASSFP|FUNCSTAT

file_path = ARGV[0]

subdivision_path = Pathname.getwd.join("lib/data/subdivision")
puts "county path? ", subdivision_path

puts "fips states? ", FipsLookup::STATE_CODES.keys

FipsLookup::STATE_CODES.each_key do |state_code|
  # make csv file if it does not exist
  subdivision_state_file_path = subdivision_path.join("#{state_code}.csv")
  FileUtils.touch(subdivision_state_file_path)
end

return unless File.exist?(file_path)

previous_state_code = "AL"
File.open(file_path).each do |line|
  row = line.split("|")

  if previous_state_code == row[0]
    # working in the same CSV file (continue to stream row to CSV)
  else
    # close old csv file, open new csv, set new state_code
  end
end

puts "HELLOW~!!!! past check"

# open file and read line by line

# print out contents of line (to see variables and output)
# figure out how / what to add into CSV options for each new subdivision file
